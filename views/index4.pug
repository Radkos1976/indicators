extends layout0

block content
  ul.a
    li.dropdown      
      a.dropbtn() Wydział    
      select#elementId(onchange='updateValues()',title="Nazwa Obszaru Premiowego")          
          option(disabled='' style="font-size: 11px;font-weight: bold;; background-color: lightblue;") WYDZIAŁ TAPICERNII SITS
          option(value='400S0') TAPICERNIA
          option(value='400S1') TAPICERNIA WYKL. PODUSZEK
          option(value='400S2') TAPICERNIA PRACOWNICY POŚR. PROD.
          option(value='400S3') ROZLICZENIE TAPICERNI
          option(disabled='' style="font-size: 12px;font-weight: bold;; background-color: lightblue;") WYDZIAŁ LINII IKEA  
          option(value='500L0') LINIA PRODUKCYJNA
          option(value='500L1') NAPEŁNIANIE PODUSZEK
          option(value='500L2') OPERATORZY LINIA i PRACOWNICY POŚR. PROD.
          option(value='500L3') ROZLICZENIE LINII IKEA
          option(value='500L4') LIDER I PRACOWNICY GRUPY WDROŻENIOWEJ                
          option(disabled='' style="font-size: 11px;font-weight: bold;; background-color: lightblue;")  WYDZIAŁ KROJOWNI
          option(value='100K0') KROJOWNIA TKANIN
          option(value='100K1') KROJOWNIA SKÓR IKEA
          option(value='100K2') KROJOWNIA SKÓR SITS
          option(value='100K3') MAGAZYN TKANIN
          option(disabled='' style="font-size: 11px;font-weight: bold;; background-color: lightblue;")  WYDZIAŁ SZWALNI       
          option(value='200S0') SZWALNIA SKÓR
          option(value='200S1') SZWALNIA TKANIN
          option(value='200S2') MAGAZYN POSZYĆ
          option(value='200S3') ROZLICZENIE SZWALNI i KROJOWNI          
          option(disabled='' style="font-size: 11px;font-weight: bold;; background-color: lightblue;") DZIAŁY POMOCNICZE
          option(value='000M1') DZIAŁ ROZWOJU PRODUKCJI
          option(value='300M1') DYSPOZYTOR, POMOCNIK DYSPOZYTORA
          option(value='300M0') MAGAZYN MATERIAŁÓW
          option(value='600M0') MAGAZYN WYROBÓW GOTOWYCH IKEA
          option(value='600M1') MAGAZYN WYROBÓW GOTOWYCH SITS              
    li.dropdown  
      a.dropbtn() Rodzaj danych
      select#elementd(onchange='updateValues()',title="Pokaż Raport") 
          option(disabled='' style="font-size: 11px;font-weight: bold;; background-color: lightblue;") BIEŻĄCE WYNIKI GRAFICZNIE DLA OBSZARU  
          option(value=1,title="Wynik dzienny Brutto") DZIENNE PRODUKCJI
          option(value=2,title="Wynik tygodniowy Brutto") TYGODNIOWE PRODUKCJI
          option(value=3,title="Wynik miesięczny Brutto") MIESIĘCZNE PRODUKCJI
          option(disabled='' style="font-size: 11px;font-weight: bold;; background-color: lightblue;") WYSOKOŚĆ PREMII DLA OBSZARU
          option(value=0,title="Prezentacja bieżących wyników z wytłumaczeniem sposobu obliczania") TABELA CELÓW DO PREMII PRODUKCJA
          option(value=4,title="Wyniki historyczne wraz ze składowymi") WYNIKI HISTORYCZNE PRODUKCJA
          option(disabled='' style="font-size: 11px;font-weight: bold;; background-color: lightblue;") POZOSTAŁE WSKAŹNIKI WYDZIAŁOWE NETTO
          option(value=16,title="Wynik dzienny Netto") DZIENNE NETTO
          option(value=17,title="Wynik tygodniowy Netto") TYGODNIOWE NETTO
          option(value=18,title="Wynik miesięczny Netto") MIESIĘCZNE NETTO
    li.dropdown(style="float: center;height=100%;color: #00B7FF;")
      button(onclick='show_logon()',title="Zaloguj się żeby zobaczyć wszystkie dane")
          span.ui-button-icon.ui-icon.ui-icon-alert.ui-state-default
          span.ui-button-icon-space#lo             
      a.dropbtn#logon(title="Zaloguj się żeby zobaczyć wszystkie dane",style="float: center;margin: 30;position: absolute;text-align: center;background-color:red;font: 16px 'Lucida Grande', Helvetica, Arial, sans-serif;" ,onclick='dialog.dialog("open");') Nie Zalogowano         
    li.dropdown(style="float: right")
      a.dropbtn() Przełącz na prezentacje / Uruchom stronę
      .dropdown-content        
        divider PREZENTACJE DLA PRODUKCJI      
        a(href='AL') Prezentacja celów dla całości Produkcji
        a(href='400ST') Prezentacja celów Tapicerni
        a(href='500LI') Prezentacja celów Linia Produkcyjna
        a(href='200SW') Prezentacja celów Szwalnia
        a(href='600M') Prezentacja celów Mag.Wyr.Gotowych
        divider PREZENTACJE POMOCNICZE 
        a(href='ALL') Prezentacja celów dla całości Produkcji z działami pomocniczymi
        divider Pozostałe strony WWW
        a(href='AUDIT_RESULTS') Indywidualny Mnożnik Jakościowy
        divider PLIKI DO POBRANIA
        a(href='restricted/Wyniki_Działy_Produkcyjne.xlsm') Premia w EXCEL 
       
  #pan
        #cont1(style='z-index:-1; position: relative;float: left; display:none;')
          button#bt1.ui-icon.ui-icon-info.ui-state-default(type='button',style='z-index:2; position: absolute; top:5px; left:3px;',value='\u2630',title="Opcje wykresu",onclick='showPleaseWait("#bt1")')
          canvas#canvas3(style='z-index:1;height: 100%; width: 100%;')
         
        #cont2(style='z-index:-1; position: relative;float: left; display:none;')
          button#bt2.ui-icon.ui-icon-info.ui-state-default(type='button', style='z-index:2; position: absolute; top:5px; left:3px;',value='\u2630',title="Opcje wykresu",onclick='showPleaseWait("#bt2")')
          canvas#canvas4(style='z-index:1;height: 100%; width: 100%;')
         
        #cont3(style='z-index:-1; position: relative;float: left; display:none;')
          button#bt3.ui-icon.ui-icon-info.ui-state-default(type='button', style='z-index:2; position: absolute; top:5px; left:3px;',value='\u2630',title="Opcje wykresu",onclick='showPleaseWait("#bt3")')
          canvas#canvas2(style='z-index:1;height: 100%; width: 100%;')
         
        #cont4(style='z-index:-1; position: relative;float: left; display:none;')
          button#bt4.ui-icon.ui-icon-info.ui-state-default(type='button', style='z-index:2; position: absolute; top:5px; left:3px;',value='\u2630',title="Opcje wykresu",onclick='showPleaseWait("#bt4")')
          canvas#canvas(style='z-index:1;height: 100%; width: 100%;')
         
        #cont5(style='z-index:-1; position: relative;float: left; display:none;')
          button#bt5.ui-icon.ui-icon-info.ui-state-default(type='button', style='z-index:2; position: absolute; top:5px; left:3px;',value='\u2630',title="Opcje wykresu",onclick='showPleaseWait("#bt5")') 
          canvas#canvas1(style='z-index:1;height: 100%; width: 100%;')
  #dialog-form(title='Logowanie',style="display:none;padding: .3em;")
        p.validateTips(style='border: 1px solid transparent; padding: 0.3em;' ) Proszę o wprowadzenie loginu i hasła
        form
          fieldset(style='padding:0; border:0; margin-top:25px;') 
            label(for="name" ,style='display:block;') Nazwa Użytkownika
            input#name.text.ui-widget-content.ui-corner-all(type='text', name='name', style='display:block; margin-bottom:12px; width:95%; padding: .4em;')            
            label(for="password",style='display:block;') Hasło
            input#password.text.ui-widget-content.ui-corner-all(type="password", name='current-password', style='display:block; margin-bottom:12px; width:95%; padding: .4em;')
            
   
        script(type='text/javascript').        
          $( function() {
            $( document ).tooltip();
          });
          tips = $( ".validateTips" );
          function show_logon() {
            if ($("#lo").text() == 'Logowanie') {
              dialog.dialog("open");
            } else {
              clear_storage();
            }
          }        
          function MainViewModel(data) {                
            let self = this;
            let ctx =  $("#canvas").get(0).getContext("2d"); 
            let ctx1 = $("#canvas1").get(0).getContext("2d");
            let ctx2=  $("#canvas3").get(0).getContext("2d");
            let ctx3=  $("#canvas4").get(0).getContext("2d");
            let ctx4=  $("#canvas2").get(0).getContext("2d");                      
            self.loadDataset = function(id,refr,offset) { 
              let mnth=get_PL_Dat();           
              $('canvas').css({ 
                  width: '',
                  height: ''
                });
              $('canvas1').css({ 
                  width: '',
                  height: ''
                });
              $('canvas2').css({ 
                    width: '',
                    height: ''
                });
              $('canvas3').css({ 
                  width: '',
                  height: ''
                });  
              $('canvas4').css({ 
                    width: '',
                    height: ''
                  }); 
            if (typeof offset=='undefined') {offset=0};           
            let w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
            let h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;                 
            let qry=0;
            qr=IS_one(DEP);
            if (id==16||id==17||id==18) {
              if (DEP.substring(0,1)==0) {
                id=id-15;
              }
            };            
            if (id==4) {
              let query="/data13/";
              $.get(get_lt(query, DEP),function(dat) {
                let data;
                if (sessionStorage.getItem('name')!=null && dat.crypto=='YES') {
                  data=cjson.decrypt(dat.data,privekey);
                } else {
                  data=dat.data;
                }                 
                if (data.error!="yes") {                                                      
                if (qr==2) {
                  $("#cont1").show();
                  if (typeof data.menu_item=='undefined' && typeof data.LT_unit=='undefined') {
                    $("#bt1").hide();
                  } else {                                       
                    set_menus(data,query,"#bt1");
                  }                 
                  ctx.canvas.width  = 1;
                  ctx.canvas.height = 1;
                  ctx.canvas.style.visibility='hidden';
                  $("#cont4").hide();
                  ctx1.canvas.width  = 1;
                  ctx1.canvas.height = 1;
                  ctx1.canvas.style.visibility='hidden';
                  $("#cont5").hide();                     
                  ctx2.canvas.width  = parseInt(Math.round(w*0.985));
                  ctx2.canvas.height = parseInt(Math.round(h*0.40));
                  ctx2.canvas.style.visibility='visible';
                                  
                  if (ctx2.tpchart!='Bar')  {
                    ctx2.firstPass=1;                
                    c2 = new Chart(ctx2).Bar(data,get_options(data.title,data.subtitle,"Bar",0,4,0,0,0,data.jedn));
                  } else {
                    deleteHighLight(ctx2,data);
                    updateChart(ctx2,data,get_options(data.title,data.subtitle,"Bar",0,4,0,0,0,data.jedn),refr,refr);
                  };              
                  let dt={
                    labels : data.labels,
                    title : data.title1,
                    subtitle: data.subtitle,
                    datasets :data.datasets1
                  }; 
                  $("#cont2").show();
                  if (typeof data.menu_item=='undefined' && typeof data.LT_unit=='undefined') {
                    $("#bt2").hide();
                  } else {
                    $("#bt2").show();
                  }      
                  ctx3.canvas.width  = parseInt(Math.round(w*0.985));
                  ctx3.canvas.height = parseInt(Math.round(h*0.28));
                  ctx3.canvas.style.visibility='visible';                  
                  if (ctx3.tpchart!='Line')  {
                    ctx3.firstPass=1;
                    c3 = new Chart(ctx3).Line(dt,get_options(data.title1,data.subtitle,"Line",0,3));
                  }   else {
                    deleteHighLight(ctx3,dt);
                    updateChart(ctx3,dt,get_options(data.title1,data.subtitle,"Line",0,3),refr,refr);
                  };                          
                  let dy={
                    labels : data.labels,
                    title : data.title2,
                    subtitle: data.subtitle,
                    datasets :data.datasets2
                  };
                  $("#cont3").show();
                  if (typeof data.menu_item=='undefined' && typeof data.LT_unit=='undefined') {
                    $("#bt3").hide();
                  } else {
                    $("#bt3").show();
                  }      
                  ctx4.canvas.width  = parseInt(Math.round(w*0.985));
                  ctx4.canvas.height = parseInt(Math.round(h*0.28));
                  ctx4.canvas.style.visibility='visible';                   
                  if (ctx4.tpchart!='Bar')  {
                    ctx4.firstPass=1;                     
                    c4 = new Chart(ctx4).Bar(dy,get_options(data.title2,data.subtitle,"Bar",0,3));
                  } else {
                    deleteHighLight(ctx4,dy);
                    updateChart(ctx4,dy,get_options(data.title2,data.subtitle,"Bar",0,3),refr,refr);
                  };            
                } else {
                  if (qr==1) {
                    $("#cont1").show();
                    if (typeof data.menu_item=='undefined' && typeof data.LT_unit=='undefined') {
                      $("#bt1").hide();
                    } else {
                      $("#bt1").show();
                    }
                    $("#cont4").hide();
                    $("#cont3").hide();
                    $("#cont5").hide();
                    ctx.canvas.width  = 1;
                    ctx.canvas.height = 1;
                    ctx.canvas.style.visibility='hidden';
                    ctx1.canvas.width  = 1;
                    ctx1.canvas.height = 1;
                    ctx1.canvas.style.visibility='hidden';
                    ctx4.canvas.width  = 1;
                    ctx4.canvas.height = 1;
                    ctx4.canvas.style.visibility='hidden';       
                    ctx2.canvas.width  = parseInt(Math.round(w*0.985));
                    ctx2.canvas.height = parseInt(Math.round(h*0.60));
                    ctx2.canvas.style.visibility='visible';
                    if (ctx2.tpchart!='Bar')  {
                      ctx2.firstPass=1;                
                      c2 = new Chart(ctx2).Bar(data,get_options(data.title,data.subtitle,"Bar",0,4,0,0,0,data.jedn));
                    } else {                                
                      deleteHighLight(ctx2,data);
                      updateChart(ctx2,data,get_options(data.title,data.subtitle,"Bar",0,4,0,0,0,data.jedn),refr,refr);
                    };
                    let dt={
                      labels : data.labels,
                      title : data.title1,
                      subtitle: data.subtitle,
                      datasets :data.datasets1
                    };  
                    $("#cont2").show();
                    if (typeof data.menu_item=='undefined' && typeof data.LT_unit=='undefined') {
                      $("#bt2").hide();
                    } else {
                      $("#bt2").show();
                    }  
                    ctx3.canvas.width  = parseInt(Math.round(w*0.985));
                    ctx3.canvas.height = parseInt(Math.round(h*0.36));
                    ctx3.canvas.style.visibility='visible';
                    if (ctx3.tpchart!='Line')  {
                      ctx3.firstPass=1;
                      c3 = new Chart(ctx3).Line(dt,get_options(data.title1,data.subtitle,"Line",0,3));
                    }   else {                 
                      deleteHighLight(ctx3,dt);
                      updateChart(ctx3,dt,get_options(data.title1,data.subtitle,"Line",0,3),refr,refr);
                    };
                  } else {
                    if (qr==3) {
                    $("#cont4").hide();
                    $("#cont1").show()
                    if (typeof data.menu_item=='undefined' && typeof data.LT_unit=='undefined') {
                      $("#bt1").hide();
                    } else {
                      $("#bt1").show();
                    }
                    ctx.canvas.width  = 1;
                    ctx.canvas.height = 1;
                    ctx.canvas.style.visibility='hidden';        
                    ctx2.canvas.width  = parseInt(Math.round(w*0.985));
                    ctx2.canvas.height = parseInt(Math.round(h*0.35));
                    ctx2.canvas.style.visibility='visible';
                    if (ctx2.tpchart!='Bar')  {
                      ctx2.firstPass=1;                
                      c2 = new Chart(ctx2).Bar(data,get_options(data.title,data.subtitle,"Bar",0,4,0,0,0,data.jedn));
                    } else {                                
                      deleteHighLight(ctx2,data);
                      updateChart(ctx2,data,get_options(data.title,data.subtitle,"Bar",0,4,0,0,0,data.jedn),refr,refr);
                    };
                  let dt={
                      labels : data.labels,
                      title : data.title1,
                      subtitle: data.subtitle,
                      datasets :data.datasets1
                    };
                    $("#cont2").show();
                    if (typeof data.menu_item=='undefined' && typeof data.LT_unit=='undefined') {
                      $("#bt2").hide();
                    } else {
                      $("#bt2").show();
                    }       
                    ctx3.canvas.width  = parseInt(Math.round(w*0.985));
                    ctx3.canvas.height = parseInt(Math.round(h*0.20));
                    ctx3.canvas.style.visibility='visible';
                    if (ctx3.tpchart!='Line')  {
                      ctx3.firstPass=1;
                      c3 = new Chart(ctx3).Line(dt,get_options(data.title1,data.subtitle,"Line",0,3));
                    }   else {                 
                      deleteHighLight(ctx3,dt);
                      updateChart(ctx3,dt,get_options(data.title1,data.subtitle,"Line",0,3),refr,refr);
                    };                 
                    let dy={
                      labels : data.labels,
                      title : data.title2,
                      subtitle: data.subtitle,
                      datasets :data.datasets2
                    };
                    $("#cont3").show();
                    if (typeof data.menu_item=='undefined' && typeof data.LT_unit=='undefined') {
                      $("#bt3").hide();
                    } else {
                      $("#bt3").show();
                    }        
                    ctx4.canvas.width  = parseInt(Math.round(w*0.985));
                    ctx4.canvas.height = parseInt(Math.round(h*0.20));
                    ctx4.canvas.style.visibility='visible'; 
                    if (ctx4.tpchart!='Bar')  {
                      ctx4.firstPass=1;                     
                      c4 = new Chart(ctx4).Bar(dy,get_options(data.title2,data.subtitle,"Bar",0,3));
                    } else {
                      deleteHighLight(ctx4,dy);
                      updateChart(ctx4,dy,get_options(data.title2,data.subtitle,"Bar",0,3),refr,refr);
                    };                
                    let dz={
                      labels : data.labels,
                      title : data.title3,
                      subtitle: data.subtitle,
                      datasets :data.datasets3
                    };  
                     $("#cont4").show();
                     if (typeof data.menu_item=='undefined' && typeof data.LT_unit=='undefined') {
                       $("#bt4").hide();
                     } else {
                       $("#bt4").show();
                     }     
                    ctx.canvas.width  = parseInt(Math.round(w*0.985));
                    ctx.canvas.height = parseInt(Math.round(h*0.20));
                    ctx.canvas.style.visibility='visible';
                    if (ctx.tpchart!='Line')  {
                      ctx.firstPass=1;                 
                      c0 = new Chart(ctx).Line(dz,get_options(data.title3,data.subtitle,"Line",0,4,0,0,0,'\u2030'));
                    } else {
                      deleteHighLight(ctx,dz);
                      updateChart(ctx,dz,get_options(data.title3,data.subtitle,"Line",0,4,0,0,0,'\u2030'),refr,refr); 
                      };                                       
                    } else {
                      if (qr==4) {
                        $("#cont1").show();
                        if (typeof data.menu_item=='undefined' && typeof data.LT_unit=='undefined') {
                          $("#bt1").hide();
                        } else {
                          $("#bt1").show();
                        }
                        ctx2.canvas.width  = parseInt(Math.round(w*0.985));
                        ctx2.canvas.height = parseInt(Math.round(h*0.25));
                        ctx2.canvas.style.visibility='visible';
                        if (ctx2.tpchart!='Bar')  {
                          ctx2.firstPass=1;                
                          c2 = new Chart(ctx2).Bar(data,get_options(data.title,data.subtitle,"Bar",0,4,0,0,0,data.jedn));
                        } else {                                
                          deleteHighLight(ctx2,data);
                          updateChart(ctx2,data,get_options(data.title,data.subtitle,"Bar",0,4,0,0,0,data.jedn),refr,refr);
                        };
                      let dt={
                          labels : data.labels,
                          title : data.title1,
                          subtitle: data.subtitle,
                          datasets :data.datasets1
                        }; 
                        $("#cont2").show();
                        if (typeof data.menu_item=='undefined' && typeof data.LT_unit=='undefined') {
                          $("#bt2").hide();
                        } else {
                          $("#bt2").show();
                        }     
                        ctx3.canvas.width  = parseInt(Math.round(w*0.985));
                        ctx3.canvas.height = parseInt(Math.round(h*0.18));
                        ctx3.canvas.style.visibility='visible';
                        if (ctx3.tpchart!='Line')  {
                          ctx3.firstPass=1;
                          c3 = new Chart(ctx3).Line(dt,get_options(data.title1,data.subtitle,"Line",0,3));
                        }   else {                 
                          deleteHighLight(ctx3,dt);
                          updateChart(ctx3,dt,get_options(data.title1,data.subtitle,"Line",0,3),refr,refr);
                        };                 
                        let dy={
                          labels : data.labels,
                          title : data.title2,
                          subtitle: data.subtitle,
                          datasets :data.datasets2
                        };
                        $("#cont3").show(); 
                        if (typeof data.menu_item=='undefined' && typeof data.LT_unit=='undefined') {
                          $("#bt3").hide();
                        } else {
                          $("#bt3").show();
                        }    
                        ctx4.canvas.width  = parseInt(Math.round(w*0.985));
                        ctx4.canvas.height = parseInt(Math.round(h*0.18));
                        ctx4.canvas.style.visibility='visible'; 
                        if (ctx4.tpchart!='Bar')  {
                          ctx4.firstPass=1;                     
                          c4 = new Chart(ctx4).Bar(dy,get_options(data.title2,data.subtitle,"Bar",0,3));
                        } else {
                          deleteHighLight(ctx4,dy);
                          updateChart(ctx4,dy,get_options(data.title2,data.subtitle,"Bar",0,3),refr,refr);
                        };                
                        let dz={
                          labels : data.labels,
                          title : data.title3,
                          subtitle: data.subtitle,
                          datasets :data.datasets3
                        }; 
                        $("#cont4").show();
                        if (typeof data.menu_item=='undefined' && typeof data.LT_unit=='undefined') {
                          $("#bt4").hide();
                        } else {
                          $("#bt4").show();
                        }                               
                        ctx.canvas.width  = parseInt(Math.round(w*0.985));
                        ctx.canvas.height = parseInt(Math.round(h*0.18));
                        ctx.canvas.style.visibility='visible';
                        if (ctx.tpchart!='Line')  {
                          ctx.firstPass=1;                 
                          c0 = new Chart(ctx).Line(dz,get_options(data.title3,data.subtitle,"Line",0,4,0,0,0,'%'));
                        } else {
                          deleteHighLight(ctx,dz);
                          updateChart(ctx,dz,get_options(data.title3,data.subtitle,"Line",0,4,0,0,0,'%'),refr,refr); 
                        };
                        let dv={
                          labels : data.labels,
                          title : data.title4,
                          subtitle: data.subtitle,
                          datasets :data.datasets4
                        }; 
                        $("#cont5").show();
                        if (typeof data.menu_item=='undefined' && typeof data.LT_unit=='undefined') {
                          $("#bt5").hide();
                        } else {
                          $("#bt5").show();
                        }     
                        ctx1.canvas.width  = parseInt(Math.round(w*0.985));
                        ctx1.canvas.height = parseInt(Math.round(h*0.18));
                        ctx1.canvas.style.visibility='visible';
                        if (ctx1.tpchart!='Line')  {
                          ctx1.firstPass=1;                 
                          c15 = new Chart(ctx1).Line(dv,get_options(data.title4,data.subtitle,"Line",0,4,0,0,0,'mb'));
                        } else {
                          deleteHighLight(ctx1,dv);
                          updateChart(ctx1,dv,get_options(data.title4,data.subtitle,"Line",0,4,0,0,0,'mb'),refr,refr); 
                        };                        
                      }
                    }
                  };
                };
              };            
            });              
            } else if (id==16||id==17||id==18) {    
              if (qr==2||qr==1||DEP=='300M0') {
                let dt1,dt2,dt3,dt4;
                $.when(                  
                    $.get(get_lt("/data" + id + "/", DEP),function(data) {
                      if (sessionStorage.getItem('name')!=null && data.crypto=='YES') {
                        dt1=cjson.decrypt(data.data,privekey);
                      } else {
                        dt1=data.data;
                      }                    
                    }),
                    $.get(get_lt("/data" + (id+4) + "/", DEP),function(data) {
                      if (sessionStorage.getItem('name')!=null && data.crypto=='YES') {
                        dt2=cjson.decrypt(data.data,privekey);
                      } else {
                        dt2=data.data;
                      }                      
                    }),
                    $.get(get_lt("/data" + (id-11) + "/", DEP.substring(0,4)+0),function(data) {
                      if (sessionStorage.getItem('name')!=null && data.crypto=='YES') {
                        dt3=cjson.decrypt(data.data,privekey);
                      } else {
                        dt3=data.data;
                      }                      
                    }),                  
                    $.get(get_lt("/data13/", DEP.substring(0,4)+0),function(data) {
                      if (sessionStorage.getItem('name')!=null && data.crypto=='YES') {
                        dt4=cjson.decrypt(data.data,privekey);
                      } else {
                        dt4=data.data;
                      }                    
                    })
              ).then(function (){                
                let vld = false;
                 if (dt1 && dt2 && dt3) {
                   if (dt1.error!="yes" && dt2.error!="yes" && dt3.error!="yes" ) {
                     if (DEP.substring(0,1)==3 && id==18 && dt4) {
                       if (dt4.error!="yes"){
                         vld=true;
                       }
                     } else {
                       vld=true;
                     }
                   }
                 }
                 if (vld) {
                   for (let i=0; i < dt3.datasets[0].data.length; i++) {
                     if (dt3.datasets[0].data[i]==null) {
                       dt3.datasets[0].data[i]=undefined;
                     };
                   };
                   $("#cont5").hide();
                   $("#cont1").show();
                   if (typeof dt1.menu_item=='undefined' && typeof dt1.LT_unit=='undefined') {
                     $("#bt1").hide();
                   } else {
                     $("#bt1").show();
                   }
                   $("#cont2").show();
                   if (typeof dt2.menu_item=='undefined' && typeof dt2.LT_unit=='undefined') {
                     $("#bt2").hide();
                   } else {
                     $("#bt2").show();
                   }
                   $("#cont3").show();
                   if (typeof dt3.menu_item=='undefined' && typeof dt3.LT_unit=='undefined') {
                     $("#bt3").hide();
                   } else {
                     $("#bt3").show();
                   }
                   ctx1.canvas.width  = 1;
                   ctx1.canvas.height = 1;
                   ctx1.canvas.style.visibility='hidden';
                   ctx2.canvas.width  = parseInt(Math.round(w*0.985));
                   if (DEP.substring(0,1)==3 && id==18){
                     ctx2.canvas.height = parseInt(Math.round(h*0.25));
                   } else {
                     ctx2.canvas.height = parseInt(Math.round(h*0.40));
                   }                   
                   ctx3.canvas.width  = parseInt(Math.round(w*0.985));
                   if (DEP.substring(0,1)==3 && id==18){
                     ctx3.canvas.height = parseInt(Math.round(h*0.25));
                     } else {
                     ctx3.canvas.height = parseInt(Math.round(h*0.28));
                   };
                   ctx4.canvas.width  = parseInt(Math.round(w*0.985));                    
                   if (DEP.substring(0,1)==3 && id==18) {                     
                     ctx4.canvas.height = parseInt(Math.round(h*0.25));
                   } else {
                     ctx4.canvas.height = parseInt(Math.round(h*0.28));                      
                   };
                   ctx2.canvas.style.visibility='visible';                                       
                   ctx3.canvas.style.visibility='visible'; 
                   ctx4.canvas.style.visibility='visible';
                   if (ctx2.tpchart!='Line')  {
                     ctx2.firstPass=1;                
                     c2 = new Chart(ctx2).Line(dt1,get_options(dt1.title,dt1.subtitle,"Line",0,4,0,0,0,'%'));
                   } else {
                     deleteHighLight(ctx2,dt1);
                     updateChart(ctx2,dt1,get_options(dt1.title,dt1.subtitle,"Line",0,4,0,0,0,'%'),refr,refr);
                   };
                   if (ctx3.tpchart!='Bar')  {
                     ctx3.firstPass=1;
                     c3 = new Chart(ctx3).Bar(dt2,get_options(dt2.title,dt2.subtitle,"Bar",0,4,0,0,0,'%'));
                   }  else {
                     deleteHighLight(ctx3,dt2);
                     updateChart(ctx3,dt2,get_options(dt2.title,dt2.subtitle,"Bar",0,4,0,0,0,'%'),refr,refr);
                   };
                   if (ctx4.tpchart!='Bar')  {
                     ctx4.firstPass=1;                     
                     c4 = new Chart(ctx4).Bar(dt3,get_options(dt3.title,dt3.subtitle,"Bar",0,4,0,0,0,'%'));
                   } else {
                     deleteHighLight(ctx4,dt3);
                     updateChart(ctx4,dt3,get_options(dt3.title,dt3.subtitle,"Bar",0,4,0,0,0,'%'),refr,refr);                     
                   };                   
                   if (DEP.substring(0,1)==3 && id==18) { 
                     $("#cont4").show();
                     if (typeof dt4.menu_item=='undefined' && typeof dt4.LT_unit=='undefined') {
                       $("#bt4").hide();
                     } else {
                       $("#bt4").show();
                     }
                     ctx.canvas.width  = parseInt(Math.round(w*0.985));
                     ctx.canvas.height = parseInt(Math.round(h*0.20));
                     ctx.canvas.style.visibility='visible'; 
                     let dz={
                       labels : dt4.labels,
                       title : dt4.title3,
                       subtitle: dt4.subtitle,
                       datasets :dt4.datasets3
                     };
                     if (ctx.tpchart!='Line')  {
                       ctx.firstPass=1;                 
                       c0 = new Chart(ctx).Line(dz,get_options(dt4.title3,dt4.subtitle,"Line",0,4,0,0,0,'\u2030'));
                     } else {
                       deleteHighLight(ctx,dz);
                       updateChart(ctx,dz,get_options(dt4.title3,dt4.subtitle,"Line",0,4,0,0,0,'\u2030'),refr,refr); 
                     };                      
                   } else {
                     $("#cont4").hide();
                     ctx.canvas.width  = 1;
                     ctx.canvas.height = 1;
                     ctx.canvas.style.visibility='hidden';
                   }
                 }               
                });                                                    
            } else {
              let dt1,dt2,dt3
              $.when(
                  $.get(get_lt("/data" + id +"/",DEP)+"/500",function(data) {
                    if (sessionStorage.getItem('name')!=null && data.crypto=='YES') {
                      dt1=cjson.decrypt(data.data,privekey);
                    } else {
                      dt1=data.data;
                    }                    
                  }),
                  $.get(get_lt("/data" + (id-11) +"/" ,DEP),function(data) {
                    if (sessionStorage.getItem('name')!=null && data.crypto=='YES') {
                      dt2=cjson.decrypt(data.data,privekey);
                    } else {
                      dt2=data.data;
                    }                    
                  }),
                  $.get(get_lt("/data13/", DEP),function(data) {
                    if (sessionStorage.getItem('name')!=null && data.crypto=='YES') {
                      dt3=cjson.decrypt(data.data,privekey);
                    } else {
                      dt3=data.data;
                    }                  
                  })                  
              ).then(function (){
                let vld = false;
                 if (dt1 && dt2 && dt3) {
                   if (dt1.error!="yes" && dt2.error!="yes" && dt3.error!="yes" ) {                     
                       vld=true;          
                   }
                 }
                 if (vld) {
                   for (let i=0; i < dt2.datasets[0].data.length; i++) {
                     if (dt2.datasets[0].data[i]==null) {
                       dt2.datasets[0].data[i]=undefined;
                     };
                   }; 
                   $("#cont4").hide();
                   $("#cont5").hide();                                        
                   $("#cont1").show();
                   if (typeof dt1.menu_item=='undefined' && typeof dt1.LT_unit=='undefined') {
                     $("#bt1").hide();
                   } else {
                     $("#bt1").show();
                   }
                   $("#cont2").show();
                   if (typeof dt2.menu_item=='undefined' && typeof dt2.LT_unit=='undefined') {
                     $("#bt2").hide();
                   } else {
                     $("#bt2").show();
                   }               
                   ctx.canvas.width  = 1;
                   ctx.canvas.height = 1;
                   ctx.canvas.style.visibility='hidden';
                   ctx1.canvas.width  = 1;
                   ctx1.canvas.height = 1;
                   ctx1.canvas.style.visibility='hidden';
                   ctx2.canvas.width  = parseInt(Math.round(w*0.985));
                   if (id==18){
                     ctx2.canvas.height = parseInt(Math.round(h*0.35));
                   } else {
                     ctx2.canvas.height = parseInt(Math.round(h*0.46));
                   }                  
                   ctx3.canvas.width  = parseInt(Math.round(w*0.985));
                   if (id==18) {
                     ctx3.canvas.height = parseInt(Math.round(h*0.35));
                   } else {
                     ctx3.canvas.height = parseInt(Math.round(h*0.46));
                   };
                   ctx2.canvas.style.visibility='visible';    
                   ctx3.canvas.style.visibility='visible';                 
                   if (id==18) {
                     $("#cont3").show();
                     if (typeof dt3.menu_item=='undefined' && typeof dt3.LT_unit=='undefined') {
                       $("#bt3").hide();
                     } else {
                       $("#bt3").show();
                     }
                     ctx4.canvas.width  = parseInt(Math.round(w*0.985));
                     ctx4.canvas.height = parseInt(Math.round(h*0.25));
                     ctx4.canvas.style.visibility='visible';
                     let dz={
                       labels : dt3.labels,
                       title : dt3.title3,
                       subtitle: dt3.subtitle,
                       datasets :dt3.datasets3
                     };
                     if (ctx4.tpchart!='Line')  {
                       ctx4.firstPass=1;                 
                       c4 = new Chart(ctx4).Line(dz,get_options(dt3.title3,dt3.subtitle,"Line",0,4,0,0,0,'\u2030'));
                     } else {
                       deleteHighLight(ctx4,dz);
                       updateChart(ctx4,dz,get_options(dt3.title3,dt3.subtitle,"Line",0,4,0,0,0,'\u2030'),refr,refr); 
                     };  
                   } else {
                   $("#cont3").hide(); 
                   ctx4.canvas.width  = 1;
                   ctx4.canvas.height = 1;
                   ctx4.canvas.style.visibility='hidden';
                  }
                  if (ctx2.tpchart!='Line')  {
                    ctx2.firstPass=1;                
                    c2 = new Chart(ctx2).Line(dt1,get_options(dt1.title,dt1.subtitle,"Line",0,4,0,0,0,'%'));
                  } else {
                    deleteHighLight(ctx2,dt1);
                    updateChart(ctx2,dt1,get_options(dt1.title,dt1.subtitle,"Line",0,4,0,0,0,'%'),refr,refr);
                  };
                  if (ctx3.tpchart!='Bar')  {
                    ctx3.firstPass=1;                     
                    c3 = new Chart(ctx3).Bar(dt2,get_options(dt2.title,dt2.subtitle,"Bar",0,4,0,0,0,'%'));
                  } else {
                    deleteHighLight(ctx3,dt2);
                    updateChart(ctx3,dt2,get_options(dt2.title,dt2.subtitle,"Bar",0,4,0,0,0,'%'),refr,refr);
                  };
                }
              })            
            }
          } else if (id==0) {
            let wyniki,dta;            
            $.when(
              $.get("/data12/" + DEP,function(data) {
                if (sessionStorage.getItem('name')!=null && data.crypto=='YES') {
                  wyniki=cjson.decrypt(data.data,privekey);
                } else {
                  wyniki=data.data;
                }                
              }),           
              $.get("/data4/" + DEP, function(data) {
                if (sessionStorage.getItem('name')!=null && data.crypto=='YES') {
                  dta=cjson.decrypt(data.data,privekey);
                } else { 
                  dta=data.data;
                }              
              })
            ).then(function (){
              $("#cont5").show();
              if (typeof wyniki.menu_item=='undefined' && typeof wyniki.LT_unit=='undefined') {
                $("#bt5").hide();
              } else {
                $("#bt5").show();
              }
              $("#cont4").hide();
              $("#cont1").hide();
              $("#cont2").hide();
              $("#cont3").hide();
              ctx.canvas.width  = 1;
              ctx.canvas.height = 1;
              ctx.canvas.style.visibility='hidden';
              ctx2.canvas.width  = 1;
              ctx2.canvas.height = 1 ;
              ctx2.canvas.style.visibility='hidden';
              ctx3.canvas.width  = 1;
              ctx3.canvas.height = 1 ;
              ctx3.canvas.style.visibility='hidden';
              ctx4.canvas.width  = 1;
              ctx4.canvas.height = 1 ;
              ctx4.canvas.style.visibility='hidden';
              $('canvas').css({ 
                  width: '',
                  height: ''
                });                
              if (c0!=null) {c0.completed=true};
              if (c1!=null) {c1.completed=true};
              if (c2!=null) {c2.completed=true};
              if (c3!=null) {c3.completed=true};
              if (c4!=null) {c4.completed=true};
              ctx1.canvas.width  = parseInt(Math.round(w*0.985));
              ctx1.canvas.height = parseInt(Math.round(h*0.985));
              ctx1.canvas.style.visibility='visible';
              let wyn=[],s,q,opt;
              wyn.push(0);
              ctx1.font=parseInt(Math.round(h*0.985*100/(16+qr)*0.01)) +'px Arial';
              let m=0;
              for (let i=0; i < dta.table[1].length; i++) {
                if (dta.table[dta.table.length-1][i]==wyniki.Wyd) {
                  m=i;
                  };
                if (dta.table[1][i]==null) {
                    dta.table[1].splice(i,dta.table[1].length-i);
                  } else {
                  dta.table[1][i]=dta.table[1][i]+'%';
                  };                               
                };
              wyn.push(m);
              if (qr>1) {
              m=0;
              for (let i=0; i < dta.table[2].length; i++) {
                if (dta.table[dta.table.length-1][i]==wyniki.five_S) {
                  m=i;
                  };
                  if (dta.table[2][i]==null) {
                      dta.table[2].splice(i,dta.table[2].length-i);
                    } else {                  
                dta.table[2][i]=dta.table[2][i]+'%';
                  };
                };
              wyn.push(m);
              };
              m=0;
              if (qr==1) {
                s=2;
                q=wyniki.value;
              } else {
                s=3;
                if (qr==2 ) {
                  q=wyniki.value;
                } else {
                  q=wyniki.p_BRAK;
                }
              }
              for (let i=0; i < dta.table[s].length; i++) {
                if (dta.table[dta.table.length-1][i]<=q) {
                  m=i;
                  };
                  if (qr==3) {
                    if (DEP!='100K3'){
                      dta.table[s][i]=dta.table[s][i]+'\u2030';
                    } else {
                      dta.table[s][i]=dta.table[s][i]+' ';
                    }  
                  } else {
                    dta.table[s][i]=dta.table[s][i]+wyniki.jedn;
                  }                                 
                };
              wyn.push(m);
              if (qr>2) {
              m=0;
              if (qr==3) {
                q=wyniki.value;
                jed='%';
              } else {
                q=wyniki.p_wyd_MB;
                jed='mb';
              }
              for (let i=0; i < dta.table[4].length; i++) {
                if (dta.table[dta.table.length-1][i]<=q) {
                  m=i;
                  };
                  if (dta.table[4][i]==null) {
                      dta.table[4].splice(i,dta.table[4].length-i);
                    } else {                  
                dta.table[4][i]=dta.table[4][i]+jed;
                  };
                };
              wyn.push(m);
              };
              if (qr>3) {
              m=0;
              for (let i=0; i < dta.table[5].length; i++) {
                if (dta.table[dta.table.length-1][i]<=wyniki.value) {
                  m=i;
                  };
                  if (dta.table[5][i]==null) {
                      dta.table[5].splice(i,dta.table[5].length-i);
                    } else {                  
                dta.table[5][i]=dta.table[5][i]+'%';
                  };
                };
              wyn.push(m);
              }; 
              let fnt1 = getMetrics("_Wynik_",ctx1.font,ctx1);
              let fnt2 = getMetrics("Wydajność",ctx1.font,ctx1);
              if (qr==2) {
                opt={
                  context : ctx1,
                  table : dta.table,
                  columns : dta.columns,
                  wynik: wyn,
                  width : ctx1.canvas.width,
                  height : ctx1.canvas.height,
                  colwidth : [Math.round(fnt1.width*1.2),Math.round(fnt2.width*1.2),Math.round(fnt2.width*1.2),Math.round(fnt2.width*1.2),Math.round(fnt2.width*1.2)],
                  colheight : Math.round(fnt1.height*0.8),
                  tblFNTSIZ : Math.round(fnt1.height*0.7),
                  headfntSIZ : Math.round(fnt1.height*0.8),
                  waga : dta.waga,
                  jedn : wyniki.jedn,
                  wyniki : ['Wynik',wyniki.wydajnosc + '%',wyniki.s + '%',wyniki.value + wyniki.jedn],
                  title : dta.title,
                  subtitle : wyniki.subtitle,
                  fonttitle : 'bold '+ parseInt(Math.round(fnt1.height)) + 'px Arial',
                  fonttitle_Size:parseInt(Math.round(fnt1.height)),
                  fontsubtitle :'italic '+ parseInt(Math.round(fnt1.height*0.7))+ 'px Arial',
                  fontsubtitle_Size:parseInt(Math.round(fnt1.height*0.7))
                };
              } else {
              if (qr==1) {
                opt={
                  context : ctx1,
                  table : dta.table,
                  columns : dta.columns,
                  wynik: wyn,
                  width : ctx1.canvas.width,
                  height : ctx1.canvas.height,
                  colwidth : [Math.round(fnt1.width*1.2),Math.round(fnt2.width*1.2),Math.round(fnt2.width*1.2),Math.round(fnt2.width*1.2)],
                  colheight : Math.round(fnt1.height*0.8),
                  tblFNTSIZ : Math.round(fnt1.height*0.7),
                  headfntSIZ : Math.round(fnt1.height*0.8),
                  waga : dta.waga,
                  jedn : wyniki.jedn,
                  wyniki : ['Wynik',wyniki.wydajnosc + '%',wyniki.value + wyniki.jedn],
                  title : dta.title,
                  subtitle : wyniki.subtitle,
                  fonttitle : 'bold '+ parseInt(Math.round(fnt1.height)) + 'px Arial',
                  fontsubtitle :'italic '+ parseInt(Math.round(fnt1.height*0.7))+ 'px Arial',
                  fonttitle_Size:parseInt(Math.round(fnt1.height)),                  
                  fontsubtitle_Size:parseInt(Math.round(fnt1.height*0.7))
                };
              } else {
                if (qr==3) {
                  if (DEP!='100K3'){
                    opt={
                      context : ctx1,
                      table : dta.table,
                      columns : dta.columns,
                      wynik: wyn,
                      width : ctx1.canvas.width,
                      height : ctx1.canvas.height,
                      colwidth : [Math.round(fnt1.width*1.2),Math.round(fnt2.width*1.2),Math.round(fnt2.width*1.2),Math.round(fnt2.width*1.2),Math.round(fnt2.width*1.2)],
                      colheight : Math.round(fnt1.height*0.8),
                      tblFNTSIZ : Math.round(fnt1.height*0.7),
                      headfntSIZ : Math.round(fnt1.height*0.8),
                      waga : dta.waga,
                      jedn : wyniki.jedn,
                      wyniki : ['Wynik',wyniki.wydajnosc + '%',wyniki.s + '%',wyniki.braki + '\u2030',wyniki.value + wyniki.jedn],
                      title : dta.title,
                      subtitle : wyniki.subtitle,
                      fonttitle : 'bold '+ parseInt(Math.round(fnt1.height)) + 'px Arial',
                      fontsubtitle :'italic '+ parseInt(Math.round(fnt1.height*0.7))+ 'px Arial',
                      fonttitle_Size:parseInt(Math.round(fnt1.height)),                  
                      fontsubtitle_Size:parseInt(Math.round(fnt1.height*0.7))
                      };
                  } else {
                    opt={
                      context : ctx1,
                      table : dta.table,
                      columns : dta.columns,
                      wynik: wyn,
                      width : ctx1.canvas.width,
                      height : ctx1.canvas.height,
                      colwidth : [Math.round(fnt1.width*1.2),Math.round(fnt2.width*1.2),Math.round(fnt2.width*1.2),Math.round(fnt2.width*1.2),Math.round(fnt2.width*1.2)],
                      colheight : Math.round(fnt1.height*0.8),
                      tblFNTSIZ : Math.round(fnt1.height*0.7),
                      headfntSIZ : Math.round(fnt1.height*0.8),
                      waga : dta.waga,
                      jedn : wyniki.jedn,
                      wyniki : ['Wynik',wyniki.wydajnosc + '%',wyniki.s + '%',wyniki.braki + ' ',wyniki.value + wyniki.jedn],
                      title : dta.title,
                      subtitle : wyniki.subtitle,
                      fonttitle : 'bold '+ parseInt(Math.round(fnt1.height)) + 'px Arial',
                      fontsubtitle :'italic '+ parseInt(Math.round(fnt1.height*0.7))+ 'px Arial',
                      fonttitle_Size:parseInt(Math.round(fnt1.height)),                  
                      fontsubtitle_Size:parseInt(Math.round(fnt1.height*0.7))
                      };
                  } 
                } else {
                  if (qr==4) {
                  opt={
                    context : ctx1,
                    table : dta.table,
                    columns : dta.columns,
                    wynik: wyn,
                    width : ctx1.canvas.width,
                    height : ctx1.canvas.height,
                    colwidth : [Math.round(fnt1.width*1.3),Math.round(fnt2.width*1.1),Math.round(fnt2.width*1.1),Math.round(fnt2.width*1.1),Math.round(fnt2.width*1),Math.round(fnt2.width*1.1)],
                    colheight : Math.round(fnt1.height*0.8),
                    tblFNTSIZ : Math.round(fnt1.height*0.7),
                    headfntSIZ : Math.round(fnt1.height*0.8),
                    waga : dta.waga,
                    jedn : wyniki.jedn,
                    wyniki : ['Wynik',wyniki.wydajnosc + '%',wyniki.s + '%',wyniki.braki + '%',wyniki.wyd_MB + 'mb',wyniki.value + wyniki.jedn],
                    title : dta.title,
                    subtitle : wyniki.subtitle,
                    fonttitle : 'bold '+ parseInt(Math.round(fnt1.height)) + 'px Arial',
                    fontsubtitle :'italic '+ parseInt(Math.round(fnt1.height*0.7))+ 'px Arial',
                    fonttitle_Size:parseInt(Math.round(fnt1.height)),                  
                    fontsubtitle_Size:parseInt(Math.round(fnt1.height*0.7))
                    };
                   }
                 }
               }
             }
             anim=0;
             let myline=TabANIM(opt); 
            });          
          } else {
            let dt1,dt2,dt3,dt4,dt5          
            $.when(              
              $.get(get_lt("/data" + id + "/",DEP),function(data) {
                if (sessionStorage.getItem('name')!=null && data.crypto=='YES') { 
                  dt1=cjson.decrypt(data.data,privekey);
                } else {
                  dt1=data.data;
                }                
              }),
              $.get(get_lt("/data" + (id+4) + "/",DEP), function(data) {
                if (sessionStorage.getItem('name')!=null && data.crypto=='YES') {
                  dt2=cjson.decrypt(data.data,privekey);
                } else {
                  dt2=data.data;
                }              
              }),
              $.get(get_lt("/data10/" ,DEP), function(data) {
                if (sessionStorage.getItem('name')!=null && data.crypto=='YES') {
                  dt3=cjson.decrypt(data.data,privekey);
                } else {
                  dt3=data.data;
                }                
              }),
              $.get(get_lt("/data" + (12+offset) + "/", DEP), function(data) {
                if (sessionStorage.getItem('name')!=null && data.crypto=='YES') {
                  dt4=cjson.decrypt(data.data,privekey);
                } else {
                  dt4=data.data;
                }              
              }),
              $.get(get_lt("/data11/", DEP), function(data) {
                if (sessionStorage.getItem('name')!=null  && data.crypto=='YES') {
                  dt5=cjson.decrypt(data.data,privekey);
                } else {
                  dt5=data.data;
                }              
              })              
            ).then(function(){
              qry=1;
              if (dt2.error!="yes"){
                for (let i=0; i < dt2.datasets[0].data.length; i++) {
                  if (dt2.datasets[0].data[i]==null) {
                    dt2.datasets[0].data[i]=undefined;
                  };
                };
              }
              
              $("#cont4").show();
              if (typeof dt1.menu_item=='undefined' && typeof dt1.LT_unit=='undefined') {
                $("#bt4").hide();
              } else {
                $("#bt4").show();
              }
              $("#cont1").show();
              if (typeof dt3.menu_item=='undefined' && typeof dt3.LT_unit=='undefined') {
                $("#bt1").hide();
              } else {
                $("#bt1").show();
              }
              $("#cont2").show();
              if (typeof dt4.menu_item=='undefined' && typeof dt4.LT_unit=='undefined') {
                $("#bt2").hide();
              } else {
                $("#bt2").show();
              }
              
              ctx.canvas.width  = parseInt(Math.round(w*0.985));
              if (qr==1 && id>1){
                ctx.canvas.height = parseInt(Math.round(h*0.60));
              } else {
                ctx.canvas.height = parseInt(Math.round(h*0.30));
              }
              if (qr==1) {
                $("#cont3").hide();
                ctx2.canvas.width  = parseInt(Math.round(w*0.492));
                ctx3.canvas.width  = parseInt(Math.round(w*0.492));
                ctx4.canvas.width  = 1;
                ctx4.canvas.height = 1 ;
                ctx4.canvas.style.visibility='hidden';            
              } else {
                ctx2.canvas.width  = parseInt(Math.round(w*0.328));
                ctx3.canvas.width  = parseInt(Math.round(w*0.328));
                if (id==1) {
                  $("#cont3").show();
                  if (typeof dt5.menu_item=='undefined' && typeof dt5.LT_unit=='undefined') {
                    $("#bt3").hide();
                  } else {
                    $("#bt3").show();
                  }
                  ctx4.canvas.width  = parseInt(Math.round(w*0.328));
                  ctx4.canvas.height = parseInt(Math.round(h*0.65));
                  ctx4.canvas.style.visibility='visible';
                } else {
                  $("#cont3").show();
                  if (typeof dt5.menu_item=='undefined' && typeof dt5.LT_unit=='undefined') {
                    $("#bt3").hide();
                  } else {
                    $("#bt3").show();
                  }
                  ctx4.canvas.width  = parseInt(Math.round(w*0.328));
                  ctx4.canvas.height = parseInt(Math.round(h*0.35));
                  ctx4.canvas.style.visibility='visible';
                };
              }             
              if (id==1||id>1&&qr==1) {
                $("#cont5").hide();
                ctx1.canvas.width  = 1;
                ctx1.canvas.height = 1;
                ctx1.canvas.style.visibility='hidden'
              } else {
                anim=1;
                $("#cont5").show();
                if (typeof dt2.menu_item=='undefined' && typeof dt2.LT_unit=='undefined') {
                  $("#bt5").hide();
                } else {
                  $("#bt5").show();
                }
                ctx1.canvas.width  = parseInt(Math.round(w*0.985));
                ctx1.canvas.height = parseInt(Math.round(h*0.30));
                ctx1.canvas.style.visibility='visible';
              } 
              if (id==1) {                   
                ctx2.canvas.height = parseInt(Math.round(h*0.65));
                ctx2.canvas.style.visibility='visible'; 
                ctx3.canvas.height = parseInt(Math.round(h*0.65));
                ctx3.canvas.style.visibility='visible';           
              } else { 
                ctx2.canvas.height = parseInt(Math.round(h*0.35));
                ctx2.canvas.style.visibility='visible';
                ctx3.canvas.height = parseInt(Math.round(h*0.35));
                ctx3.canvas.style.visibility='visible';
              }                          
              ctx.canvas.style.visibility='visible';              
              if (ctx.tpchart!='Line')  {
                  ctx.firstPass=1;
                  c0 = new Chart(ctx).Line(dt1,get_options(dt1.title,dt1.subtitle,"Line",0,id));
              } else {
                  deleteHighLight(ctx,dt1);
                  updateChart(ctx,dt1,get_options(dt1.title,dt1.subtitle,"Line",0,id),refr,refr);
              };
              if (dt2.error!="yes") {
                if (id!=1||id>1&&qr!=1) {
                  if (ctx1.tpchart!='Bar')  {
                    ctx1.firstPass=1;
                    c1 = new Chart(ctx1).Bar(dt2,get_options(dt2.title,dt2.subtitle,"Bar",0,id));
                  } else {
                    deleteHighLight(ctx1,dt2);
                    updateChart(ctx1,dt2,get_options(dt2.title,dt2.subtitle,"Bar",0,id),refr,refr);
                  };
                } 
              }
              if (dt3.error!="yes") {
                mnth=dt3.Mnt;
                let options,dat;
                dat = pop_Don(dt3.color,dt3.value,dt3.jedn);
                if (mnth!=dt3.Mnt&&qry==1) {
                  options = get_options(dt3.title,dt3.subtitle,"Doughnut",["Poprzedni miesiąc",dt3.value + dt3.jedn],0,[30,0],[50*w/1920-1,48*w/1920-1],["lightgrey","black"]);
                } else {
                  options = get_options(dt3.title,dt3.subtitle,"Doughnut",[dt3.value + dt3.jedn],0,[0],[48*w/1920-1],["black"]);
                }
                if (ctx2.tpchart!='Doughnut')  {
                  ctx2.firstPass=1;
                  c2 = new Chart(ctx2).Doughnut(dat,options);
                } else {
                  deleteHighLight(ctx2,dat);
                  updateChart(ctx2,dat,options,refr,refr);
                };
              };
              if (dt4.error!="yes"){
                let options;
                let dat = pop_Don(dt4.color,dt4.value,dt4.jedn);
                if (mnth!=dt4.Mnt&&qry==1) {
                  options = get_options(dt4.title,dt4.subtitle,"Doughnut",["Poprzedni miesiąc",dt4.value + dt4.jedn],0,[30,0],[50*w/1920-1,48*w/1920-1],["lightgrey","black"]);
                } else {
                  options = get_options(dt4.title,dt4.subtitle,"Doughnut",[dt4.value + dt4.jedn],0,[0],[48*w/1920-1],["black"]);
                };
                if (ctx3.tpchart!='Doughnut')  {
                  ctx3.firstPass=1;
                  c3 = new Chart(ctx3).Doughnut(dat,options);
                } else {
                  deleteHighLight(ctx3,dat);
                  updateChart(ctx3,dat,options,refr,refr);
                };
              };
              if (dt5.error!="yes") {
                let options;
                let dat = pop_Don(dt5.color,dt5.value,dt5.jedn);
                if (mnth!=dt5.Mnt&&qry==1) {
                  options = get_options(dt5.title,dt5.subtitle,"Doughnut",["Poprzedni miesiąc",dt5.value + dt5.jedn],0,[30,0],[50*w/1920-1,48*w/1920-1],["BurlyWood","black"]);
                } else {
                  options = get_options(dt5.title,dt5.subtitle,"Doughnut",[dt5.value + dt5.jedn],0,[0],[48*w/1920-1],["black"]);
                };
                if (ctx4.tpchart!='Doughnut')  {
                  ctx4.firstPass=1;
                  c4 = new Chart(ctx4).Doughnut(dat,options); 
                } else {                
                  deleteHighLight(ctx4,dat);
                  updateChart(ctx4,dat,options,refr,refr);  
                };
              }              
            })
          }}};          
          function pop_Don(colMain,alu,jed) {
              //alu=alu*2;
                if (jed=='%') { 
                  if (qr==4 && colMain=="rgba(45,212,195,0.4)") {
                  max=2
                  } else {
                  max=100;
                  }
                } else if (jed=='mb') {
                  max=10;
                } else if (jed==' ') {
                  max=2;
                } else if (jed=='\u2030') {
                  max=1.5;
                } else {
                  max=430;
                  }              
                if (colMain=="rgba(45,212,195,0.4)" || colMain=="rgba(194,152,44,0.5)") {
                  if(alu <= 0) {
                    if(alu>=max*-1) {
                      let dat = [
                        {
                          value : max+(alu+max),
                          color: "rgba(219,220,221,0.6)",
                          title : "Pozostałe"                
                        },
                        {
                          value : alu*-1,
                          color: [colMain],
                          title : "WYnik do Stu",
                          expandInRadius : 0.2,
                          expandOutRadius : 0.05                
                        }];
                        return dat;
                      } else if (alu>=max*2){
                        let dat = [
                          {
                            value : max+(alu+max),
                            color: "rgba(219,220,221,0.6)",
                            title : "Pozostałe"                
                          },
                          {
                            value :(alu+max)*-1,
                            color: ["orange"],
                            title:"Ponad Sto",
                            expandInRadius : 0.3,
                            expandOutRadius : 0.07               
                          },
                          {
                            value :max,
                            color: [colMain],
                            title : "WYnik do Stu",
                            expandInRadius : 0.2,
                            expandOutRadius : 0.05                 
                          }];
                          return dat;
                        } else {
                          let dat = [                            
                            {
                              value : max,
                              color: ["orange"],
                              title:"Ponad Sto",
                              expandInRadius : 0.3,
                              expandOutRadius : 0.07               
                            },
                            {
                              value :max-((max*2)+alu)*-1,
                              color: [colMain],
                              title : "WYnik do Stu", 
                              expandInRadius : 0.2,
                              expandOutRadius : 0.05                
                            },
                            {
                              value : ((max*2)+alu)*-1,
                              color: "rgba(255, 83, 25, 0.8)",
                              title : "Pozostałe"                
                            }];
                            return dat;
                        }                   
                  } else {
                    if (alu!=null) {
                      if (alu>=max) {
                        if (alu<=max*2) {
                        let dat = [
                          {
                            value : max,
                            color: [colMain],
                            title : "WYnik do Stu",
                            expandInRadius : 0.2,
                            expandOutRadius : 0.05                 
                          },
                          {
                            value :alu-max,
                            color: ["red"],
                            title:"Ponad Sto",
                            expandInRadius : 0.3,
                            expandOutRadius : 0.07                                           
                          },
                          {
                          value :max-(alu-max),
                          color: ["white"],
                          title:"Pozostałe" 
                          }];
                        return dat;
                      } else {
                        let dat = [
                          {
                            value :alu-max*2,
                            color: ["red"],
                            title:"Ponad dwieście",
                            expandInRadius : 0.4,
                            expandOutRadius : 0.07                                           
                          },
                          {
                            value : max-(alu-max*2),
                            color: [colMain],
                            title : "WYnik do Stu",
                            expandInRadius : 0.2,
                            expandOutRadius : 0.05                 
                          },
                          {
                            value :max,
                            color: ["red"],
                            title:"Ponad Sto",
                            expandInRadius : 0.3,
                            expandOutRadius : 0.07                                           
                          }];
                          return dat; 
                      }
                      
                      } else {
                          let dat = [
                            {
                              value : alu,
                              color: [colMain],
                              title : "Wynik",
                              expandInRadius : 0.2,
                              expandOutRadius : 0.05                
                            },
                            {
                              value : max+alu,
                              color: "rgba(219,220,221,0.6)",
                              title : "Do stu"                                
                            }];
                          return dat;
                          }
                    } else {
                      let dat = [{
                          value : 0,
                          color: [colMain],
                          title : "Wynik",
                          expandInRadius : 0.2,
                          expandOutRadius : 0.05                 
                        }];
                      return dat;
                    };                   
                  }
                } else {
                if(alu >= max){
                let dat = [
                  {
                    value :alu-max,
                    color: ["orange"],
                    title:"Ponad Sto",
                    expandInRadius : 0.3,
                    expandOutRadius : 0.07               
                  },
                  {
                    value : max-(alu-max),
                    color: [colMain],
                    title : "WYnik do Stu",
                    expandInRadius : 0.2,
                    expandOutRadius : 0.05                 
                  }];
                  return dat;
                }else{
                  if (alu!=null) {
                  let dat = [
                    {
                      value : alu,
                      color: [colMain],
                      title : "Wynik",
                      expandInRadius : 0.2,
                      expandOutRadius : 0.05                
                    },
                    {
                      value : max-(alu),
                      color: "rgba(219,220,221,0.6)",
                      title : "Do stu"                                
                    }];
                    return dat;
                  } else {
                    let dat = [
                      {
                        value : 0,
                        color: [colMain],
                        title : "Wynik",
                        expandInRadius : 0.2,
                        expandOutRadius : 0.05                
                      }];
                      return dat;
                  };                   
                }
              }
            };                        
          function get_options(title,subtitle,type,valu,ch,angl,fntsi,fcol,jedn) {
              let w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
              let h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
                let sc=13*w/1920-1;
                if (ch==2) {
                  sc=18*w/1920-1
                }else if(ch==3||ch==4) {
                  sc=16*w/1920-1
                  };
                  let DataTmpl="<%=v3%>%";
                  let AxisLabel="Procent"
               if (ch==4) {
                  DataTmpl='<%=v3%>'+jedn;
                  if (jedn=="zł") {AxisLabel="PLN"} else {if (jedn=="%") {AxisLabel="Procent"} else { if (jedn=='mb') {AxisLabel='mb/godz' } else {AxisLabel="Promil"}}};
                };
                if (type=="Doughnut"){
                  if (valu=='null%') {valu=["BRAK DANYCH"]};
                  let options = {                
                  canvasBorders : true,
                  multiGraph : true,
                  canvasBordersColor : "rgba(151,187,205,1)",
                  canvasBordersWidth : 1,
                  annotateDisplay:true,
                  dynamicDisplay : false,
                  graphTitle:title,
                  graphSubTitle:subtitle,
                  graphTitleFontSize:24*w/1920-1,
                  graphSubTitleFontSize:18*w/1920-1,
                  spaceBottom: 10,
                  animationSteps : 10,
                  spaceTop: 10,                            
                  animation: true,
                  crossText : valu,
                  crossTextAngle : angl,
                  crossTextFontSize : fntsi,
                  crossTextFontColor: fcol,
                  crossTextFontStyle : ["bold"],
                    };
                    return options;
                }else if (type=="Bar") {
                    let options = {                  
                  canvasBorders : true,
                  canvasBordersColor : "rgba(151,187,205,1)",
                  canvasBordersWidth : 1,
                  scaleYGridLinesStep: 2,
                  dynamicDisplay : false,
                  inGraphDataBackgroundColor:"yellow",
                  annotateDisplay:true,
                  animation: true,
                  animationSteps : 10,
                  yAxisMinimumInterval : 2,
                  inGraphDataAlign : "center",
                  inGraphDataVAlign: "center",
                  inGraphDataShow : true,
                  inGraphDataFontSize : 26*w/1920-1,
                  inGraphDataTmpl : DataTmpl,
                  inGraphDataFontStyle : "bold",
                  graphTitle:title,
                  graphSubTitle:subtitle,
                  graphTitleFontSize:24*w/1920-1,
                  graphSubTitleFontSize:18*w/1920-1,
                  yAxisLabel : AxisLabel,
                  yAxisFontSize: 18*w/1920-1,
                  xAxisFontSize : 25*w/1920-1,
                  scaleFontSize: sc,
                  showYLabels: 2,
                  scaleGridLineStyle : "longDashShortDash",
                  scaleGridLineWidth: "0.2",
                  scaleLineColor: "rgba(151,187,205,1)",
                  scaleGridLineColor : "rgba(151,187,205,1)", 
                  spaceBottom: 10,
                  spaceTop: 10, 
                    };
                    return options;
               } else {
                let options = {              
                canvasBorders : true,
                canvasBordersColor : "rgba(151,187,205,1)",
                canvasBordersWidth : 1,      
                scaleYGridLinesStep: 2,
                dynamicDisplay : false,
                annotateDisplay:true,
                inGraphDataBackgroundColor:"yellow",
                yAxisMinimumInterval : 2,
                inGraphDataAlign : "center",
                inGraphDataShow : true,
                inGraphDataFontSize : 26*w/1920-1,
                scaleFontSize: sc,
                inGraphDataTmpl : DataTmpl,
                inGraphDatabordercolor: 'yellow',
                inGraphDataFontStyle : "bold",
                graphTitle:title,
                graphTitleFontSize:24*w/1920-1,
                graphSubTitleFontSize:18*w/1920-1,
                graphSubTitle:subtitle,
                animationSteps : 10,
                animationLeftToRight : true,
                yAxisLabel : AxisLabel,
                yAxisFontSize: 18*w/1920-1,
                xAxisFontSize : 25*w/1920-1,
                showYLabels: 2,
                scaleGridLineStyle : "longDashShortDash",
                scaleGridLineWidth: "0.2",
                scaleLineColor: "rgba(151,187,205,1)",
                scaleGridLineColor : "rgba(151,187,205,1)",
                spaceBottom: 10,
                spaceTop: 10,
                };
                return options;
              };      
            }
            setTimeout(set_storage,300);
            let uuid=sessionStorage.getItem('uuid');
            let privekey=sessionStorage.getItem('privateKey');
            var sessionStorage_transfer = function(event) {
              if(!event) { event = window.event; } // ie suq
              if(!event.newValue) return;          // do nothing if no value to work with
              if (event.key == 'getSessionStorage') {
                // another tab asked for the sessionStorage -> send it
                localStorage.setItem('sessionStorage', JSON.stringify(sessionStorage));
                // the other tab should now have it, so we're done with it.
                localStorage.removeItem('sessionStorage'); // <- could do short timeout as well.
              } else if (event.key == 'sessionStorage' && !sessionStorage.length) {
                // another tab sent data <- get it
                var data = JSON.parse(event.newValue);
                for (var key in data) {
                  sessionStorage.setItem(key, data[key]);
                }
              }
              setTimeout(set_storage,150);                         
            };
            // listen for changes to localStorage
            if(window.addEventListener) {              
              window.addEventListener("storage", sessionStorage_transfer, false);
              } else {
                window.attachEvent("onstorage", sessionStorage_transfer);
              };
              // Ask other tabs for session storage (this is ONLY to trigger event)
              if (!sessionStorage.length) {
                localStorage.setItem('getSessionStorage', 'foobar');
                localStorage.removeItem('getSessionStorage', 'foobar');                
              };         
            let c0=null;
            let c1=null;
            let c2=null;
            let c3=null;
            let c4=null;            
            let e = document.getElementById("elementId");
            let DEP = e.options[e.selectedIndex].value;
            let f = document.getElementById("elementd");
            let set = parseInt(f.options[f.selectedIndex].value);
            let de=0;
            let first=0;
            let txt="200S";
            let cont=0;
            let nxt=0; 
            var resizeTimer;                       
            function res(){
              clearTimeout(resizeTimer);
              resizeTimer = setTimeout(function() { 
              if (anim==0&&set==0) {
                anim=1;             
              } 
              const a = vm.loadDataset(set,false);              
              }, 250)
            } 
            function set_storage() {
              uuid=sessionStorage.getItem('uuid');
              privekey=sessionStorage.getItem('privateKey');
              if (sessionStorage.getItem('name')!=null) {
                $("#lo").text('Wyloguj');  
                $("#logon").text('Zalogowano:' + sessionStorage.getItem('name'));
              } else {
                $("#lo").text('Logowanie');  
                $.get('/secure/sess_unsign',function(dat) {});
              };   
            }                     
            function updateValues() {
             if (anim==0&&set==0) {
              anim=1;
              sleep(100);               
             };
             if (typeof c0!='undefined' && typeof c2!='undefined' && typeof c3!='undefined' && typeof c4!='undefined')
             {
              if (c0!=null && c2!=null && c3!=null && c4!=null) {
                while (c0.completed==false||c2.completed==false||c3.completed==false||c4.completed==false) {
                sleep(50);
                };
              }              
             };
             if (c1!==null) {
              while (c1.completed==false) {
                sleep(50);
              };
             }; 
             sleep(100);                  
             DEP = e.options[e.selectedIndex].value;
             set = parseInt(f.options[f.selectedIndex].value);
             const a = vm.loadDataset(set,true);    
             if (nxt==1) {cont=1};
             if (set==0) {cont=0}; 
             if (set==2 && cont==0 && qr>1) {nxt=1};
             if (set==3 && cont==0 && qr>1) {nxt=1};   
             console.log(uuid + ' key:' + privekey) ;         
             };
            window.addEventListener('resize', res);
            let qr=IS_one(DEP)
            let vm = new MainViewModel();          
            setTimeout(res,1000); 
            let leadtime={};
            let present_cont={};
            let menus={};
            //const password = '$tyghbn1';
            function hide_menus(){
              $("#menu").hide();
            }
            function showPleaseWait(cont_id) {                
                 var modalLoading =' <ul id="menu",type="menu", style="z-index:3;position:absolute; top:0px; left:0;">\
                  <li><div><span class="ui-icon ui-icon-calendar"></span>Zmień zakres dat od liczby</div>\
                    <ul style="z-index:3;border: 1px solid transparent;position:absolute;width: 10%"><li id="col0"><div>Domyślne:<button id="b0" style="display:none;float:right;">Ok</button></div></li>\
                      <li><div id="col1">Dni wstecz      :<input id="i1" type="text" name="dLt" size="4" style="display:none;" /> <button id="b1" style="display:none;float:right;">Ok</button> </div></li>\
                      <li><div id="col2">Tygodni  :<input id="i2" type="text" name="tLt" size="4" style="display:none;" /><button id="b2" style="display:none;float:right;">Ok</button></div></li>\
                      <li><div id="col3">Miesięcy :<input id="i3" type="text" name="mLt" size="4" style="display:none;"/><button id="b3" style="display:none;float:right;">Ok</button></div></li>\
                      <li><div id="col4">Kwartałów:<input id="i4" type="text" name="kLt" size="4" style="display:none;" /><button id="b4" style="display:none;float:right;">Ok</button></div></li>\
                      <li><div id="col5">Lat wstecz     :<input id="i5" type="text" name="YLt" size="4" style="display:none" /><button id="b5" style="display:none;float:right;">Ok</button></div></li></ul>\
                  </li>\
                  <li><div class="frm_lt"><span class="ui-icon ui-icon-info"></span>Aktualny Zakres Dat: Domyślne</div></li>\
                  <li><div><span class="ui-icon ui-icon-calendar"></span> Zakres dat: Domyślne</div></li>\
                  <li><button id="close" class="ui-button ui-corner-all ui-widget" style="z-index:3;border: 1px solid transparent;left: 50%;margin: 0;margin-right: -50%;transform: translate(-50%,0)" onclick="hide_menus()"><span class="ui-icon ui-icon-close"></span><span class="ui-button-icon-space"></span>Zamknij</button></li>\
                </ul>';
               if ($("#menu").length){
                 $("#menu").remove();
               }  
              $(cont_id).after(modalLoading);
             $("#menu").menu();
             $('#col0').click(function (e) {
               e.stopPropagation();
               $('#menu button').not('#close').hide();
               $('#menu input').hide();
               $('#b0').show();
             })
             $('#col1').click(function (e) {
               e.stopPropagation();
               $('#menu button').not('#close').hide();
               $('#menu input').hide();
               $('#i1').show();
               $('#b1').show();
             })
             $('#col2').click(function (e) {
               e.stopPropagation();
               $('#menu button').not('#close').hide();
               $('#menu input').hide();
               $('#i2').show();
               $('#b2').show();
             })
             $('#col3').click(function (e) {
               e.stopPropagation();
               $('#menu button').not('#close').hide();
               $('#menu input').hide();
               $('#i3').show();
               $('#b3').show();
             })
             $('#col4').click(function (e) {
               e.stopPropagation();
               $('#menu button').not('#close').hide();
               $('#menu input').hide();
               $('#i4').show();
               $('#b4').show();
             })
             $('#col5').click(function (e) {
               e.stopPropagation();
               $('#menu button').not('#close').hide();
               $('#menu input').hide();
               $('#i5').show();
               $('#b5').show();
             })
             $('#menu input').click(function (e) {
               e.stopPropagation();
               $(this).focus()
             })
            } 
            function login() {
              var name = $("#name").val();
              var password = $("#password").val();
              // zaloguj się do bazy 
              const clientEphemeral = srp.generateEphemeral(); 
              try {             
                $.post('/secure/client_hello',{username: name,clientEphemeral:clientEphemeral.public})
                .done(function(data){
                if (data.error!="yes")
                {
                  const privateKey = srp.derivePrivateKey(data.slt, name, password)
                  const clientSession = srp.deriveSession(clientEphemeral.secret, data.emp, data.slt, name, privateKey)
                  try {
                  $.post('/secure/server_hello',{uuid:data.uuid,proof:clientSession.proof})
                    .done(function(dat){
                    if (dat.error!="yes")
                    {
                      try {
                        srp.verifySession(clientEphemeral.public, clientSession, dat.proof); 
                        updateTips('Zalogowano');                       
                        $("#logon").text('Zalogowano:' + name); 
                        $("#lo").text('Wyloguj');                      
                        dialog.dialog( "close" );
                        uuid=data.uuid;
                        privekey=clientSession.key;
                        sessionStorage.setItem('name', name);
                        sessionStorage.setItem('uuid', uuid);
                        sessionStorage.setItem('privateKey',privekey);
                        
                        sleep(500);
                        window.location.reload();
                      } catch (err) {                        
                        updateTips('Błąd logowania');
                      }                    
                    } else {
                      updateTips('Błąd Logowania ' + dat.msg);
                      clear_storage();                      
                    }                    
                  })
                  .fail(function(response) {                     
                     updateTips('Błąd Logowania - Sprawdź poprawność hasła');
                     clear_storage();                  
                   })                 
                 } catch (err) {
                   updateTips('Błąd Logowania ' + err);
                   clear_storage();                  
                 }
                } else {
                  updateTips('Błąd Logowania  - użytkownik nie istnieje :' + data.msg); 
                  clear_storage();                
                }                
               })
               .fail(function(response) {                
                  clear_storage();
                  updateTips('Błąd Logowania - użytkownik nie istnieje');                  
                });              
              } catch (err) {
                updateTips('Błąd Logowania ' + err);
                clear_storage();                         
              }           
            };            
            function clear_storage() {
              $("#logon").text('Nie Zalogowano');
              $("#lo").text('Logowanie');  
              sessionStorage.removeItem('name');            
              sessionStorage.removeItem('uuid');
              sessionStorage.removeItem('privateKey');
              $.get('/secure/sess_unsign',function(dat) {});
            }
            function set_menus(data,query,type) {
              if (typeof data.LT_unit!=undefined) { 
                $(type).show();
                if (get_menu_item(query)=='none') {
                  if (typeof data.menu_item==undefined) {
                    set_menu_item(query,'',data.LT_unit,data.default_LT)
                  } else {
                    set_menu_item(query,data.menu_item,data.LT_unit,data.default_LT)
                  }
                }
              }
            }            
            function present_lt(query) {
              if (typeof leadtime[query]=="undefined") {
                leadtime[query]='standart';
              }              
                return leadtime[query]              
            }
            function get_menu_item (query) {
              if (typeof menus[query]=="undefined") {
                return 'none'
              } else {
                return menus[query]
              }
            }                      
            function set_menu_item(query,items,unit,std_unit) {
              if (typeof menus[query]=="undefined") {
                let tmp={
                  items:items,
                  unit:unit,
                  lt_unit:std_unit
                }                
                menus[query]=tmp;
              }              
            }
            function get_lt(query,dp) {               
              if (typeof leadtime[query]=="undefined") {
                leadtime[query]='standart';
              }
              if (leadtime[query]=='standart') {
                return query + dp
              }  else {
                return query + dp + "/" + leadtime[query]
              }                     
            }             
            var dialog = $( "#dialog-form" ).dialog({
              autoOpen: false,
              height: 400,
              width: 350,
              modal: true,
              buttons: {
              "Logowanie":login,                
              Cancel: function() {
                  dialog.dialog( "close" );
                }
              },
              close: function() {
                dialog.dialog( "close" );              
              }
            });
            function updateTips( t ) {
                tips
                .text( t )
                .addClass( "ui-state-highlight" );
                setTimeout(function() {
                  tips.removeClass( "ui-state-highlight", 1500 );
                }, 500 );
              }                                     
            function IS_one (depar) {
              let ar=';300M1;000M1;200S3;500L4;500L3;400S3;600W0;000M0';
              if (ar.indexOf(depar)!=-1) {
                return 1;
              } else {
                let as =';600M1;600M0;300M0;100K3';
                if (as.indexOf(depar)!=-1) {
                  return 3;
                } else {
                  let es =';100K0;100K1;100K2';
                  if (es.indexOf(depar)!=-1) {
                    return 4;
                  } else {
                    let s =';200S2';
                    if (s.indexOf(depar)!=-1) {
                      return 2;
                    } else {
                    return 2;
                  }
                };
              };
            };
          };
